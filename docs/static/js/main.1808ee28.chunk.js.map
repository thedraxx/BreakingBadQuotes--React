{"version":3,"sources":["reportWebVitals.js","Assets/ww.gif","Assets/bb2.gif","Assets/bb3.gif","Assets/bb4.gif","Assets/bb5.gif","Assets/bb6.gif","Assets/bb7.gif","Assets/bb8.gif","Assets/bb9.gif","Assets/bb10.gif","Helpers/03-examples/MultipleCustomHooks.js","Helpers/03-examples/Hooks/useCounter.js","Helpers/Hooks/useFetch.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MultipleCustomHooks","initialState","useState","counter","setCounter","increment","decrement","reset","random","Math","floor","useCounter","url","isMounted","useRef","data","loading","error","state","setstate","useEffect","current","fetch","respuesta","json","useFetch","Gifs","gif1","bb2","bb3","bb4","bb5","bb6","bb7","bb8","bb9","bb10","GifsRand","author","quote","className","class","src","alt","onClick","ReactDOM","render","document","getElementById"],"mappings":"0KAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,eCPC,MAA0B,+BCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,iC,OCkB5BQ,EAAsB,WAE/B,MClBsB,WAAwB,IAAvBC,EAAsB,uDAAP,GAEtC,EAA8BC,mBAASD,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAmBA,MAAM,CACFD,UACAE,UAnBc,WACdD,EAAWD,EAAU,IAmBrBG,UAhBc,WACdF,EAAWD,EAAU,IAgBrBI,MAbU,WACVH,EAAWH,IAaXO,OAVW,WAEXJ,EAAWK,KAAKC,MAAO,EAAAD,KAAKD,SAAmB,MDAxBG,CAAW,GAA9BR,EAAR,EAAQA,QAAQK,EAAhB,EAAgBA,OAEhB,EEpBoB,SAACI,GAErB,IAAMC,EAAYC,kBAAO,GACzB,EAA0BZ,mBAAS,CAACa,KAAK,KAAOC,SAAQ,EAAMC,MAAM,OAApE,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OAzBAC,qBAAU,WACN,OAAQ,WACJP,EAAUQ,SAAU,KAEzB,IAEHD,qBAAU,WAEND,EAAS,CAACJ,KAAK,KAAKC,SAAQ,EAAKC,MAAM,OAEvCK,MAAMV,GACDlB,MAAK,SAAA6B,GAAS,OAAIA,EAAUC,UAC5B9B,MAAK,SAAAqB,GAEEF,EAAUQ,SACVF,EAAS,CACLH,SAAQ,EACRC,MAAM,KACNF,KAAMA,SAKvB,CAACH,IAEGM,EFVmBO,CAAS,6CAAD,OAA8CtB,IAAxEa,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,KAGXW,EAAO,CAACC,EAAKC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAE/CC,EAAW5B,KAAKC,MAAoB,EAAdD,KAAKD,UAE/B,IAA4BO,GAAQA,EAAK,GAAjCuB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAGhB,OACI,gCACI,sDAGIvB,EAGQ,qBAAKwB,UAAU,mBAAf,SACK,qBAAKC,MAAM,aAKhB,6BAAYD,UAAU,uBAAtB,UACI,mBAAGA,UAAU,wBAAb,SAAsCD,IACtC,wBAAQC,UAAU,iDAAlB,SAAmE,6BAAKF,MACxE,8BAEA,qBAAKE,UAAU,OAAOE,IAAKhB,EAAKW,GAAWM,IAAI,mBAO/D,qBAAKH,UAAU,+BAAf,SACI,wBAAQA,UAAU,MACdI,QAASpC,EADb,4BGrDhBqC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BzD,K","file":"static/js/main.1808ee28.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/ww.657962eb.gif\";","export default __webpack_public_path__ + \"static/media/bb2.06ab9b2f.gif\";","export default __webpack_public_path__ + \"static/media/bb3.0214687b.gif\";","export default __webpack_public_path__ + \"static/media/bb4.a3127f87.gif\";","export default __webpack_public_path__ + \"static/media/bb5.d5a9834b.gif\";","export default __webpack_public_path__ + \"static/media/bb6.21a70dc2.gif\";","export default __webpack_public_path__ + \"static/media/bb7.45a4b998.gif\";","export default __webpack_public_path__ + \"static/media/bb8.0a655372.gif\";","export default __webpack_public_path__ + \"static/media/bb9.e202be4c.gif\";","export default __webpack_public_path__ + \"static/media/bb10.f105c072.gif\";","import React from 'react';\r\nimport '../../App.css'\r\nimport { useFetch } from '../Hooks/useFetch';\r\nimport { useCounter } from '../03-examples/Hooks/useCounter';\r\nimport logo from '../../Assets/load.gif';\r\nimport gif1 from '../../Assets/ww.gif';\r\nimport bb2 from '../../Assets/bb2.gif';\r\nimport bb3 from '../../Assets/bb3.gif';\r\nimport bb4 from '../../Assets/bb4.gif';\r\nimport bb5 from '../../Assets/bb5.gif';\r\nimport bb6 from '../../Assets/bb6.gif';\r\nimport bb7 from '../../Assets/bb7.gif';\r\nimport bb8 from '../../Assets/bb8.gif';\r\nimport bb9 from '../../Assets/bb9.gif';\r\nimport bb10 from '../../Assets/bb10.gif';\r\n\r\n\r\n\r\nexport const MultipleCustomHooks = () => {\r\n\r\n    const { counter,random } = useCounter(1);\r\n\r\n    const { loading, data } = useFetch(`https://www.breakingbadapi.com/api/quotes/${counter}`);\r\n\r\n    \r\n    const Gifs = [gif1,bb2,bb3,bb4,bb5,bb6,bb7,bb8,bb9,bb10];\r\n\r\n    let GifsRand = Math.floor(Math.random()*9);\r\n\r\n    const { author, quote } = !!data && data[0]; //Si igual a null no hace nada si no es igual a null si\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Breaking Bad Quotes </h1>\r\n\r\n            {\r\n                loading\r\n                    ?\r\n                    (\r\n                        <div className=\"text-center p-5 \">\r\n                             <div class=\"loader\"></div> \r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <blockquote className=\"blockquote text-left\">\r\n                            <p className=\"mb-3 text-center mt-5\">{quote}</p>\r\n                            <footer className=\"blockquote-footer text-black text-center mt-4 \"><h5>{author}</h5></footer>\r\n                            <div>\r\n                           \r\n                            <img className=\"Gifs\" src={Gifs[GifsRand]} alt=\"walter...\" /> \r\n                        \r\n                            </div>\r\n                        </blockquote>\r\n                    )\r\n            }\r\n\r\n            <div className=\"col text-center bg-2 rounded\">\r\n                <button className='btn'\r\n                    onClick={random}>\r\n                    Generate \r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useCounter = (initialState = 10) => {\r\n  \r\n    const [counter, setCounter] = useState(initialState); // 10\r\n\r\n    const increment = () =>{\r\n        setCounter(counter + 1);\r\n    }\r\n\r\n    const decrement = () =>{\r\n        setCounter(counter - 1);\r\n    }\r\n\r\n    const reset = () => {\r\n        setCounter(initialState)\r\n    }\r\n    \r\n    const random = () => {\r\n\r\n        setCounter(Math.floor((Math.random() * (11-5))+5));\r\n    }\r\n\r\n    return{\r\n        counter,\r\n        increment,\r\n        decrement,\r\n        reset,\r\n        random,\r\n    }\r\n\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n\r\n    const isMounted = useRef(true);\r\n    const [state, setstate] = useState({data:null , loading:true, error:null})\r\n\r\n    useEffect(() => {\r\n        return  () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        setstate({data:null,loading:true,error:null})\r\n        \r\n        fetch(url)\r\n            .then(respuesta => respuesta.json())\r\n            .then(data => {\r\n\r\n                if (isMounted.current) {\r\n                    setstate({\r\n                        loading:false,\r\n                        error:null,\r\n                        data: data,\r\n                    })   \r\n                }\r\n            });\r\n\r\n    }, [url])\r\n\r\n    return state;\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { MultipleCustomHooks } from './Helpers/03-examples/MultipleCustomHooks';\n\nReactDOM.render(\n  <>\n    <MultipleCustomHooks />\n  </>, \n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}